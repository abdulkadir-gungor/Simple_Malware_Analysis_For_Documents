
# Windows 10 ve Windows son sürümlerinde u16 desteklenir.
def checkFile(path:str=''):
    #
    import subprocess
    #
    script = 'cmd /u /c dir "{}"'.format( path )
    cmd_connect = subprocess.Popen(script, stdout=subprocess.PIPE)
    cmd_bytes = cmd_connect.communicate()
    cmd_string = cmd_bytes[0].decode('u16')
    #
    if cmd_string is not None:
        if isinstance(cmd_string, str):
            cmd_string_split = cmd_string.split(sep="\r\n")
            if len(cmd_string_split) == 9:
                check_file_path = cmd_string_split[3].find('Directory of')
                if check_file_path != -1 and (len(cmd_string_split[3]) > 14):
                    file_path = (cmd_string_split[3])[14:]
                    check_file_name = cmd_string_split[5].find('<DIR>')
                    if check_file_name == -1 and (len(cmd_string_split[5]) > 36):
                        file_name = (cmd_string_split[5])[36:]
                        file_full_path = file_path + "\\" + file_name
                        return True, file_full_path
    return False, ""
    #


def listFile(path:str=''):
    #
    import subprocess
    #
    script = 'cmd /u /c dir "{}"'.format( path )
    cmd_connect = subprocess.Popen(script, stdout=subprocess.PIPE)
    cmd_bytes = cmd_connect.communicate()
    cmd_string = cmd_bytes[0].decode('u16')
    #
    if cmd_string is not None:
        if isinstance(cmd_string, str):
            cmd_string_split = cmd_string.split(sep="\r\n")
            if len(cmd_string_split) > 5:
                check_file_path = cmd_string_split[3].find('Directory of')
                if check_file_path != -1 and (len(cmd_string_split[3]) > 14):
                    directory_path = (cmd_string_split[3])[14:]
                    return True, directory_path, giveAllFile(path=directory_path)
    return False, "" , ""

class FileData:
    #
    def __init__(self, filename:str, path:str):
        self.filename = filename
        self.path = path

def giveAllFile(path:str=''):
    #
    import subprocess
    #
    result = []
    #
    script = 'cmd /u /c dir "{}"'.format( path )
    cmd_connect = subprocess.Popen(script, stdout=subprocess.PIPE)
    cmd_bytes = cmd_connect.communicate()
    cmd_string = cmd_bytes[0].decode('u16')
    #
    if cmd_string is not None:
        if isinstance(cmd_string, str):
            cmd_string_split = cmd_string.split(sep="\r\n")
            if len(cmd_string_split) > 8:
                checkline = cmd_string_split[5:-3]
                for line in checkline:
                    cline=line.find('<DIR>')
                    if cline == -1 and (len(line) > 36):
                        file_name = line[36:]
                        file_path = path + "\\" + file_name
                        result.append( FileData(filename=file_name, path=file_path) )
    return result
