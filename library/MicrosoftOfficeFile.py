
import zipfile
import copy
import xml.etree.ElementTree as ET

class MOF_Data:
    #
    def __init__(self, name:str, type:str,system:int , size:int):
        self.d1_name = name
        self.d2_type = type.upper()
        if system == 0:
            self.d3_system_int = 0
            self.d3_system_tur = "Windows"
        elif system == 3:
            self.d3_system_int = 3
            self.d3_system_tur = "Unix (Linux, macOS vb.)"
        else:
            self.d3_system_int = system
            self.d3_system_tur = "Bilinmiyor! "
        self.d4_size = size
    #

class XML_Data:
    #
    def __init__(self, filename:str, tag:str):
        self.filename = filename
        self.tag = tag
    #

class MicrosoftOfficeFile:
    #
    def __init__(self, filename):
        self.__filename = filename
        self.d1_files_info = []
        self.d2_metadata = ''
        self.d3_types = []
        self.d4_system_int = []
        self.d4_system_str = []
        #
        self.__func1_files_info(filename=filename)
        self.__func2_metadata(filename=filename)
    #

    def __func1_files_info(self, filename):
        with zipfile.ZipFile(filename) as office:
            for file in office.infolist():
                self.d1_files_info.append( MOF_Data(name=file.filename, type=file.filename.split(sep='.')[-1], system=file.create_system, size=file.file_size) )
                if (file.filename.split(sep='.')[-1]).upper() not in self.d3_types:
                    self.d3_types.append((file.filename.split(sep='.')[-1]).upper())
                if file.create_system not in self.d4_system_int:
                    self.d4_system_int.append(file.create_system)
                    if file.create_system == 0:
                        self.d4_system_str.append( "Windows")
                    elif file.create_system == 3:
                        self.d4_system_str.append(  "Unix (Linux, macOS vb.)" )
                    else:
                        self.d3_system_int = file.create_system
                        self.d4_system_str.append( "Bilinmiyor! ")
        #

    def __func2_metadata(self,filename):
        check_metadata_file = 'docProps/core.xml'
        metadata = ''
        for ii in  self.d1_files_info:
            if ii.d1_name == check_metadata_file:
                with zipfile.ZipFile(filename, mode='r') as office:
                        core_info_bytes = office.read(name=check_metadata_file)
                        core_info_str = core_info_bytes.decode(encoding='utf-8', errors='strict')
                        del core_info_bytes
                        xml_tree = ET.fromstring(core_info_str)
                        txt_tmp = '{:<20} : {}'
                        for child in xml_tree:
                            sTag = child.tag.split(sep='}')[-1]
                            if child.text == None:
                                sText = '-'
                            elif child.text == '' or child.text.strip() == '':
                                sText = '-'
                            else:
                                sText = child.text
                            metadata += copy.deepcopy(txt_tmp.format(sTag, sText))
                            metadata += '\n'
                        metadata += '\n'
                        self.d2_metadata = metadata
                        return
                break
        metadata += "Metadata bilgisi bulunamadÄ±\n\n"

    def checkXMLtags(self, tags:list):
        result = []
        for jj in self.d1_files_info:
            if jj.d2_type == "XML" or jj.d2_type == "RELS":
                with zipfile.ZipFile(self.__filename, mode='r') as office:
                        xml_file_bytes = office.read(name=jj.d1_name )
                        xml_file_strings = xml_file_bytes.decode(encoding='utf-8', errors='ignored')
                        for tag in tags:
                            val = xml_file_strings.find(tag)
                            if val != -1:
                                result.append( XML_Data(filename=jj.d1_name, tag=tag) )
        if len(result) == 0:
            return False, result
        else:
            return True, result