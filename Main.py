import os, hashlib, datetime
from  library.CheckFile import checkFile, listFile
from  library.UploadFile import uploadFile
from  library.WriteReport import writeReport, startReport
from  library.CheckAdsData import CheckAdsData
from  library.DetectFileSignature import detectFileSignature
from  library.PdfFile import PdfFile
from  library.MicrosoftOfficeFile import MicrosoftOfficeFile
from PdfFile_Settings import javascript_tags, form_tags, embedded_tags, other_tags
from MicrosoftOfficeFile_Settings import mof_filenames, mof_malicious_extensions, mof_extensions, mof_xml_tags

def func1_clearScreen():
    print("\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n")
    if os.name=='nt':
        os.system('cls')
    elif os.name=='posix':
        os.system('clear')
    print("")

def func2_settingVirusValue(checkVirus:int,val:int):
    if val > checkVirus:
        return val
    return checkVirus

def func3_evaluteVirusValue(checkVirus:int):
    if checkVirus ==  0:
        return "[Risk:%5] (Büyük İhtimal) Zararsız "
    if checkVirus ==  1:
        return "[Risk:%25] (Muhtemel) Zararsız "
    elif checkVirus == 2:
        return "[Risk:%50] (Potansiyel) Zararlı "
    elif checkVirus == 3:
        return "[Risk:%75] (Muhtemel) Zararlı "
    elif checkVirus == 4:
        return "[Risk:%95] (Büyük İhtimal) Zararlı "
    else:
        return "Hata Oluştu!  <func3><checkVirus:"+str(checkVirus)+">"

def func4_showReport():
    func1_clearScreen()
    try:
        with open(file='Rapor.txt', mode='r', encoding='utf-8') as file:
            file_str = file.read()
        print(file_str)
    except:
        print("Rapor görüntülenirken hata oluştu!")
    print()
    print()
    input("Rapordan Çıkış <Enter> : ")

def menu01():
    while True:
        func1_clearScreen()
        print()
        print('\t#####################################################')
        print('\t#/*************************************************\#')
        print('\t#**||~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~||**#')
        print('\t#**||                                           ||**#')
        print('\t#**||       Dönem Projesi Uygulama Yazılımı     ||**#')
        print('\t#**||               Version 3.14                ||**#')
        print('\t#**||                  11/2020                  ||**#')
        print('\t#**||                                           ||**#')
        print('\t#**||                                           ||**#')
        print('\t#**||       Developer: Abdulkadir GÜNGÖR        ||**#')
        print('\t#**||                                           ||**#')
        print('\t#**||~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~||**#')
        print('\t#\*************************************************/#')
        print('\t#####################################################')
        print()
        print()
        print('\t       MENU')
        print('\t--------------------------------')
        print('\t1) Dosya adı ile tarama')
        print('\t2) Dosya listesinden seçerek tarama')
        print()
        print()
        print('\tÇıkış (Exit) <<e>>')
        tmp = input('\tSeçim (Selection) : ')
        if tmp.strip().lower() == 'e':
            exit()
        elif tmp.strip().isdigit():
            slc = int(tmp.strip())
            if 0 < slc < 3:
                return slc

def menu02():
    msg = ""
    while True:
        func1_clearScreen()
        print(msg)
        print()
        print('\tÇıkış (Exit) <<e>>, Geri (Back) <<b>>')
        filename = input('\tDosya adı : ')
        print()
        print()
        if len(filename.strip()) > 0:
            if filename.strip().lower() == 'e':
                exit(0)
            elif filename.strip().lower() == 'b':
                return False, ""
            else:
                result, cfilename = checkFile(path=filename)
                if result:
                    return True, cfilename
                else:
                    msg = '\t"'+filename+'" Dosya bulunamadı.'

def menu03():
    while True:
        func1_clearScreen()
        print()
        print()
        print('\tÇıkış (Exit) <<e>>, Geri (Back) <<b>>')
        dir_path = input('\tKlasör Yolu : ')
        print()
        print()
        if len(dir_path.strip()) > 0:
            if dir_path.strip().lower() == 'e':
                exit(0)
            elif dir_path.strip().lower() == 'b':
                return False, ""
            else:
                result,dir_path, filelist =listFile(dir_path)
                while result:
                    func1_clearScreen()
                    print('\tKlasör Yolu : "' + dir_path + '"')
                    print()
                    say = 1
                    for file in filelist:
                        print('\t'+str(say)+') '+file.filename)
                        say+=1
                    print()
                    print()
                    print('\tÇıkış (Exit) <<e>>, Geri (Back) <<b>>')
                    sel1 = input('\tSeçim : ')
                    if len(sel1.strip()) > 0:
                        if sel1.strip().lower() == 'e':
                            exit(0)
                        elif sel1.strip().lower() == 'b':
                            break
                        else:
                            if sel1.strip().isdigit():
                                sel2 = int(sel1.strip()) - 1
                                if -1 < sel2 < len(filelist):
                                    selection1 = filelist[sel2]
                                    return True, selection1.path

def menu04(filename:str):
    func1_clearScreen()
    virus_value = 0
    hata = True
    print()
    print('\t \t İşlemler ')
    print('\t----------------------------------')
    print('\t1) Dosya yükleniyor... (Lütfen bekleyiniz)')
    res1, file_bytes=uploadFile(path=filename)
    if res1:
        print('\t2) Dosya başarı ile yüklendi.')
        print('\t3) Rapor oluşturuluyor... (Lütfen bekleyiniz)')
        res2 = startReport()
        if res2:
            print('\t3) Rapor başarı ile oluşturuldu.')
            #
            rapor = "Rapor Zamanı : " + str(datetime.datetime.now()) + "\n\n"
            rapor = rapor + '[DOSYA] \n'
            rapor = rapor + 'Dosya Adresi : "' + filename + '"\n'
            rapor = rapor + "Dosya Boyutu : " + str(len(file_bytes)) + " byte(s)\n"
            rapor = rapor + "Dosya MD5    : " + str(hashlib.md5(file_bytes).hexdigest()) + "\n"
            rapor = rapor + "Dosya Sha1   : " + str(hashlib.sha1(file_bytes).hexdigest()) + "\n"
            rapor = rapor + "Dosya Sha256 : " + str(hashlib.sha256(file_bytes).hexdigest()) + "\n\n"
            #
            print('\t4) Rapora dosya özellikleri ekleniyor... (Lütfen bekleyiniz)')
            res3 = writeReport(info=rapor)
            if res3:
                print('\t5) Rapora dosya özellikleri başarı ile eklendi.')
                print('\t6) Dosyanın "Alternative Data Stream" bölümü okunuyor... (Lütfen bekleyiniz)')
                #
                ads_obj = CheckAdsData(path=filename)
                if ads_obj.ads_check_otherdata:
                    rapor = '[ALTERNATIVE DATA STREAM] ###Gizli Veri Bulundu. ###Zararlı Kodlar Olabilir!\n'
                    for aa in ads_obj.ads_otherdata_names:
                        rapor += aa + ' ; '
                    rapor += '\n\n'
                    writeReport(info=rapor)
                    virus_value = func2_settingVirusValue(virus_value, 4)
                if ads_obj.ads_zoneidentifier_data:
                    rapor = '[ALTERNATIVE DATA STREAM][Zone.Identifier] \n'
                    rapor += ads_obj.ads_zoneidentifier_data
                    rapor += '\n'
                    writeReport(info=rapor)
                    virus_value = func2_settingVirusValue(virus_value, 1)
                #
                print('\t7) Dosyanın "Alternative Data Stream" bölümü başarı ile okundu.')
                print('\t8) Dosyanın türü belirleniyor... (Lütfen bekleyiniz)')
                res4, info = detectFileSignature(bytesData=file_bytes)
                rapor = '[TÜR] \n'
                rapor += info
                writeReport(info=rapor)
                print('\t9) Dosyanın türü belirlendi.')
                if res4 == 1: #PDF
                    print('\t10) PDF Dosyası parse ediliyor... (Lütfen bekleyiniz)')
                    pdf_obj = PdfFile(file=file_bytes)
                    #
                    rapor =  '[PDF DOSYA ÖZETİ] \n'
                    rapor += '[Başlık (Header)]\n'
                    rapor += '1. İşaretçi    ( Header 1. Marker) [Ascii] : ' + pdf_obj.i2_pdfheader.b1_marker.decode(encoding='ascii', errors='strict')+'\n'
                    rapor += 'Pdf Version    ( Header Version) [Ascii]   : ' + pdf_obj.i2_pdfheader.b2_tag.decode(encoding='ascii', errors='strict')+ '\n'
                    rapor += '1. Ayırıcı     ( Header 1. Split) [Hex]    : ' + pdf_obj.i2_pdfheader.b3_split.hex(sep='-') + '\n'
                    rapor += '2. İşaretçi    ( Header 2. Marker) [Ascii] : ' + pdf_obj.i2_pdfheader.b4_marker.decode(encoding='ascii', errors='strict') + '\n'
                    rapor += 'Program İmzası ( Header Signature) [Hex]   : ' + pdf_obj.i2_pdfheader.b5_tag.hex(sep='-') + '\n'
                    rapor += '2. Ayırıcı     ( Header 2. Split) [Hex]    : ' + pdf_obj.i2_pdfheader.b3_split.hex('-') + '\n'
                    rapor += '[Gövde (Body)]\n'
                    rapor += '"obj" tag sayısı       : '+ str(pdf_obj.i3_obj_count) +    '\t <-> "endobj" tag sayısı    : ' + str(pdf_obj.i4_endobj_count) + "\n"
                    rapor += '"stream" tag sayısı    : '+ str(pdf_obj.i5_stream_count) + '\t <-> "endstream" tag sayısı : ' + str(pdf_obj.i6_endstream_count) + "\n"
                    rapor += '"xref" tag sayısı      : '+ str(pdf_obj.i7_xref_count) + '\n'
                    rapor += '"trailer" tag sayısı   : '+ str(pdf_obj.i8_trailer_count) + '\n'
                    rapor += '"startxref" tag sayısı : '+ str(pdf_obj.i9_startxref_count) + '\n'
                    rapor += '"%%EOF" tag sayısı     : '+ str(pdf_obj.i10_eof_count) + '\n\n'
                    #
                    writeReport(info=rapor)
                    if pdf_obj.i2_pdfheader.b5_tag == b'':
                        virus_value = func2_settingVirusValue(virus_value, 1)
                    print('\t11) PDF Dosyası başarı ile parse edildi.')
                    #
                    print('\t12) <Javascript> Zararlı Taglar Aranıyor... (Lütfen bekleyiniz)')
                    res5, tags5 = pdf_obj.checkPdfTags( javascript_tags() )
                    if res5:
                        rapor = '[ZARARLI PDF TAGLARI][JavaScript Tagları] \n'
                        for tag in tags5:
                            rapor += '"'+tag.tag + '" : '+ str(tag.count) + '\n'
                        rapor += '\n'
                        writeReport(info=rapor)
                        virus_value = func2_settingVirusValue(virus_value, 3)
                    print('\t13) <Javascript> Arama tamamlandı.')
                    #
                    print('\t14) <Form> Zararlı Taglar Aranıyor... (Lütfen bekleyiniz)')
                    res6, tags6 = pdf_obj.checkPdfTags( form_tags() )
                    if res6:
                        rapor = '[ZARARLI PDF TAGLARI][Form Tagları] \n'
                        for tag in tags6:
                            rapor += '"'+tag.tag + '" : '+ str(tag.count) + '\n'
                        rapor += '\n'
                        writeReport(info=rapor)
                        virus_value = func2_settingVirusValue(virus_value, 3)
                    print('\t15) <Form> Arama tamamlandı.')
                    #
                    print('\t16) <Embedded> Zararlı Taglar Aranıyor... (Lütfen bekleyiniz)')
                    res7, tags7 = pdf_obj.checkPdfTags( embedded_tags() )
                    if res7:
                        rapor = '[ZARARLI PDF TAGLARI][Gömülü Data Tagları] \n'
                        for tag in tags7:
                            rapor += '"'+tag.tag + '" : '+ str(tag.count) + '\n'
                        rapor += '\n'
                        writeReport(info=rapor)
                        virus_value = func2_settingVirusValue(virus_value, 2)
                    print('\t17) <Embedded> Arama tamamlandı.')
                    #
                    print('\t18) <Diğer> Zararlı Taglar Aranıyor... (Lütfen bekleyiniz)')
                    res8, tags8 = pdf_obj.checkPdfTags( other_tags() )
                    if res8:
                        rapor = '[ZARARLI PDF TAGLARI][Diğer Zararlı Taglar] \n'
                        for tag in tags8:
                            rapor += '"'+tag.tag + '" : '+ str(tag.count) + '\n'
                        rapor += '\n'
                        writeReport(info=rapor)
                        virus_value = func2_settingVirusValue(virus_value, 3)
                    print('\t19) <Diğer> Arama tamamlandı.')
                    #
                    if (not res5) and (not res6) and (not res7) and (not res8):
                        rapor  = '[ZARARLI PDF TAGLARI] \n'
                        rapor += "Hiçbir zararlı tag bulunamadı.\n\n"
                        writeReport(info=rapor)
                    #
                elif res4 == 2: #Microsoft Office
                    del file_bytes
                    #
                    print('\t10) Microsoft Office dosyası analiz ediliyor... (Lütfen bekleyiniz)')
                    office_obj = MicrosoftOfficeFile(filename=filename)
                    print('\t11) Microsoft Office dosyası analiz edildi.')
                    #
                    print('\t12) Dosyanın sistem bilgisi rapora ekleniyor... (Lütfen bekleyiniz)')
                    if len(office_obj.d4_system_int) == 1:
                        rapor = '[MICROSOFT OFFICE][Sistem Bilgisi] \n'
                    else:
                        rapor = '[MICROSOFT OFFICE][Sistem Bilgisi] ###DİKKAT ###Bazı dosya(lar) sonradan eklenmiş!\n'
                    for sstm in office_obj.d4_system_str:
                        rapor += sstm + ' \n'
                    rapor += '\n'
                    writeReport(info=rapor)
                    if len(office_obj.d4_system_int) != 1:
                        virus_value = func2_settingVirusValue(virus_value, 3)
                    elif office_obj.d4_system_int[0] != 0:
                        virus_value = func2_settingVirusValue(virus_value, 2)
                    print('\t13) Dosyanın sistem bilgisi rapora eklendi')
                    #
                    if office_obj.d2_metadata != '':
                        print('\t14) Metadata bilgisi rapora ekleniyor... (Lütfen bekleyiniz)')
                        rapor = '[MICROSOFT OFFICE][Metadata] \n'
                        rapor += office_obj.d2_metadata
                        writeReport(info=rapor)
                        print('\t14) Metadata bilgisi rapora eklendi.')
                    else:
                        virus_value = func2_settingVirusValue(virus_value, 1)
                    #
                    print('\t15) Uzantılar rapora ekleniyor... (Lütfen bekleyiniz)')
                    rapor = '[MICROSOFT OFFICE][İçerdiği Uzantılar] \n'
                    for tur in office_obj.d3_types:
                        rapor += tur.lower() + ' ; '
                    rapor += '\n\n'
                    writeReport(info=rapor)
                    print('\t16) Uzantılar rapora eklendi.')
                    #
                    print('\t17) Aranılan zararlı dosyalar rapora ekleniyor... (Lütfen bekleyiniz)')
                    tmp1_write = True
                    for data in office_obj.d1_files_info:
                        name = data.d1_name.split('/')[-1].upper()
                        for cname in mof_filenames():
                            if name == cname.upper():
                                if tmp1_write:
                                    tmp1_write = False
                                    rapor = '[MICROSOFT OFFICE][Aranılan Dosyalar]\n'
                                rapor += data.d1_name + '\n'
                    if not tmp1_write:
                        rapor += '\n'
                        writeReport(info=rapor)
                        virus_value = func2_settingVirusValue(virus_value, 3)
                    print('\t18) Aranılan zararlı dosyalar rapora eklendi.')
                    #
                    print('\t19) Aranılan zararlı dosya uzantıları (1) rapora ekleniyor... (Lütfen bekleyiniz)')
                    for ext in  mof_malicious_extensions():
                        tmp2_write = True
                        ext = ext.upper()
                        for data in office_obj.d1_files_info:
                            cext = data.d1_name.split('.')[-1].upper()
                            if ext == cext:
                                if tmp2_write:
                                    tmp2_write = False
                                    rapor = '[MICROSOFT OFFICE]['+ext.lower()+'] ###Bulunmaması Gereken Dosya Türleri Bulundu. ###Zararlı Kodlar Olabilir!\n'
                                rapor += data.d1_name + '\n'
                        if not tmp2_write:
                            rapor += '\n'
                            writeReport(info=rapor)
                            virus_value = func2_settingVirusValue(virus_value, 4)
                    print('\t20) Aranılan zararlı dosya uzantıları (1) rapora eklendi.')
                    #
                    print('\t21) Aranılan zararlı dosya uzantıları (2) rapora ekleniyor... (Lütfen bekleyiniz)')
                    for ext in  mof_extensions():
                        tmp3_write = True
                        ext = ext.upper()
                        for data in office_obj.d1_files_info:
                            cext = data.d1_name.split('.')[-1].upper()
                            if ext == cext:
                                if tmp3_write:
                                    tmp3_write = False
                                    rapor = '[MICROSOFT OFFICE]['+ext.lower()+'] \n'
                                rapor += data.d1_name + '\n'
                        if not tmp3_write:
                            rapor += '\n'
                            writeReport(info=rapor)
                            virus_value = func2_settingVirusValue(virus_value, 3)
                    print('\t22) Aranılan zararlı dosya uzantıları (2) rapora eklendi.')
                    #
                    print('\t23) XML dosyalarında taglar aranıyor... (Lütfen bekleyiniz)')
                    resxml, objsxml = office_obj.checkXMLtags( mof_xml_tags() )
                    if resxml:
                        rapor = '[MICROSOFT OFFICE][Zararlı XML Kodları] \n'
                        for objxml in objsxml:
                            rapor += objxml.filename  + ' : "' + objxml.tag + '" \n'
                        rapor += '\n'
                        writeReport(info=rapor)
                        virus_value = func2_settingVirusValue(virus_value, 3)
                    print('\t24) XML dosyalarında taglar arandı.')
                    #
                elif res4 == 3: #Farklı tür
                    del file_bytes
                    virus_value = func2_settingVirusValue(virus_value, 4)
                elif res4 == 4: #Tür bulunamadı.
                    del file_bytes
                    virus_value = func2_settingVirusValue(virus_value, 4)
                #
                menu05(filename=filename,virus_value=virus_value)
                hata = False
            else:
                print('\t4) Rapora dosya özellikleri eklenirken hata oluştu.')
        else:
            print('\t3) Rapor oluşturulurken hata oluştu.')
    else:
        print('\t2) "{}" dosya yüklenirken hata oluştu.'.format(filename))
    if hata:
        print()
        print()
        input("\tDevam etmek için <Enter> tuşuna basınız : ")

def menu05(filename:str, virus_value:int):
    func1_clearScreen()
    print()
    print()
    print('\tDosya : "' + filename + '"' )
    print('\tSonuç : ' + func3_evaluteVirusValue(virus_value) )
    print()
    print()
    print()
    print()
    print('\tÇıkış (Exit) <<e>>, Geri (Back) <<b>> ')
    slc = input("\tRaporu Görüntülemek İçin <Enter>      : ")
    if slc.strip().isascii():
        if slc.strip().lower() == 'e':
            exit(0)
        elif slc.strip().lower() =='b':
            return
    func4_showReport()

def main():
    try:
        while True:
            #
            slc = menu01()
            #
            if slc == 1:
                res1, fname = menu02()
                if not res1:
                    continue
            elif slc == 2:
                res2, fname = menu03()
                if not res2:
                    continue
            else:
                continue
            #
            menu04(filename=fname)
    except SystemExit:
       pass
    except:
        func1_clearScreen()
        print()
        print('\tMain Bloğuna Beklenmeyen Bir Hata Ulaştı. <3-14>')
        print('\tProgram Sonlandırılıyor ...')
        print()
        print()
        input('\tÇıkış <Enter> : ')
        exit(0)

### Program Start ###
main()
### Program End ###